{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst cartItems = createSlice({\n  name: \"cartItems\",\n  initialState: [],\n  reducers: {\n    incrementCounter(state, action) {\n      const productIndex = state.findIndex(product => product.id === action.payload);\n      if (productIndex !== -1) {\n        state[productIndex] = {\n          ...state[productIndex],\n          count: state[productIndex].count + 1\n        };\n        localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      }\n    },\n    decrementCounter(state, action) {\n      const productIndex = state.findIndex(product => product.id === action.payload);\n      if (productIndex !== -1) {\n        const updatedCount = state[productIndex].count - 1;\n        if (updatedCount === 0) {\n          state.splice(productIndex, 1);\n        } else {\n          state[productIndex] = {\n            ...state[productIndex],\n            count: updatedCount\n          };\n        }\n        localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      }\n    },\n    addToCart(state, action) {\n      //   const existingProduct = state.find(\n      //     (product) => product.id === action.payload\n      //   );\n\n      //   if (existingProduct) {\n      //     existingProduct.count += 1;\n      //   } else {\n      //     state.push({ ...action.payload, count: 1 });\n      //   }\n      //   localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      // },\n\n      // updateCartItems(state, action) {\n      //   return action.payload;\n      // },\n      const {\n        id\n      } = action.payload;\n      const existingProduct = state.find(product => product.id === id);\n      if (existingProduct) {\n        const updatedState = state.map(product => product.id === id ? {\n          ...product,\n          count: product.count + 1\n        } : product);\n        localStorage.setItem(\"addedToCart\", JSON.stringify(updatedState));\n        return updatedState;\n      } else {\n        const updatedState = [...state, {\n          ...action.payload,\n          count: 1\n        }];\n        localStorage.setItem(\"addedToCart\", JSON.stringify(updatedState));\n        return updatedState;\n      }\n    },\n    removeFromCart(state, action) {\n      const productId = action.payload;\n      const updatedCart = state.filter(product => product.id !== productId);\n      localStorage.setItem(\"addedToCart\", JSON.stringify(updatedCart));\n      return updatedCart;\n    }\n  }\n});\nexport const {\n  incrementCounter,\n  decrementCounter,\n  addToCart,\n  updateCartItems,\n  removeFromCart\n} = cartItems.actions;\nexport default configureStore({\n  reducer: {\n    cartItems: cartItems.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","cartItems","name","initialState","reducers","incrementCounter","state","action","productIndex","findIndex","product","id","payload","count","localStorage","setItem","JSON","stringify","decrementCounter","updatedCount","splice","addToCart","existingProduct","find","updatedState","map","removeFromCart","productId","updatedCart","filter","updateCartItems","actions","reducer"],"sources":["/Users/minjijung/Desktop/royasavemart/royal-save-mart/src/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst cartItems = createSlice({\n  name: \"cartItems\",\n  initialState: [],\n  reducers: {\n    incrementCounter(state, action) {\n      const productIndex = state.findIndex(\n        (product) => product.id === action.payload\n      );\n      if (productIndex !== -1) {\n        state[productIndex] = {\n          ...state[productIndex],\n          count: state[productIndex].count + 1,\n        };\n        localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      }\n    },\n\n    decrementCounter(state, action) {\n      const productIndex = state.findIndex(\n        (product) => product.id === action.payload\n      );\n      if (productIndex !== -1) {\n        const updatedCount = state[productIndex].count - 1;\n\n        if (updatedCount === 0) {\n          state.splice(productIndex, 1);\n        } else {\n          state[productIndex] = {\n            ...state[productIndex],\n            count: updatedCount,\n          };\n        }\n        localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      }\n    },\n\n    addToCart(state, action) {\n      //   const existingProduct = state.find(\n      //     (product) => product.id === action.payload\n      //   );\n\n      //   if (existingProduct) {\n      //     existingProduct.count += 1;\n      //   } else {\n      //     state.push({ ...action.payload, count: 1 });\n      //   }\n      //   localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      // },\n\n      // updateCartItems(state, action) {\n      //   return action.payload;\n      // },\n      const { id } = action.payload;\n      const existingProduct = state.find((product) => product.id === id);\n\n      if (existingProduct) {\n        const updatedState = state.map((product) =>\n          product.id === id ? { ...product, count: product.count + 1 } : product\n        );\n        localStorage.setItem(\"addedToCart\", JSON.stringify(updatedState));\n        return updatedState;\n      } else {\n        const updatedState = [...state, { ...action.payload, count: 1 }];\n        localStorage.setItem(\"addedToCart\", JSON.stringify(updatedState));\n        return updatedState;\n      }\n    },\n\n    removeFromCart(state, action) {\n      const productId = action.payload;\n      const updatedCart = state.filter((product) => product.id !== productId);\n      localStorage.setItem(\"addedToCart\", JSON.stringify(updatedCart));\n      return updatedCart;\n    },\n  },\n});\n\nexport const {\n  incrementCounter,\n  decrementCounter,\n  addToCart,\n  updateCartItems,\n  removeFromCart,\n} = cartItems.actions;\n\nexport default configureStore({\n  reducer: {\n    cartItems: cartItems.reducer,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
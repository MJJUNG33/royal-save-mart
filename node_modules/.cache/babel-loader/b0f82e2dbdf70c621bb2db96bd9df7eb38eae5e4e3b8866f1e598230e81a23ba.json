{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nlet products = createSlice({\n  name: \"products\",\n  initialState: [{\n    id: 0,\n    name: \"White and Black\",\n    count: 2\n  }, {\n    id: 2,\n    name: \"Grey Yordan\",\n    count: 1\n  }],\n  reducers: {\n    incrementCounter(state, action) {\n      let product = state.find(product => {\n        return product.id === action.payload;\n      });\n      product.count++;\n    },\n    decrementCounter(state, action) {\n      let product = state.find(product => {\n        return product.id === action.payload;\n      });\n      if (product.count > 0) {\n        return product.count--;\n      }\n    },\n    addToCart(state, action) {\n      let product = state.find(product => {\n        return product.id === action.payload;\n      });\n      products = [...state, product];\n    }\n  }\n});\nexport let {\n  incrementCounter,\n  decrementCounter\n} = products.actions;\nexport default configureStore({\n  reducer: {\n    products: products.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","products","name","initialState","id","count","reducers","incrementCounter","state","action","product","find","payload","decrementCounter","addToCart","actions","reducer"],"sources":["/Users/minjijung/Desktop/royasavemart/royal-save-mart/src/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nlet products = createSlice({\n  name: \"products\",\n  initialState: [\n    { id: 0, name: \"White and Black\", count: 2 },\n    { id: 2, name: \"Grey Yordan\", count: 1 },\n  ],\n  reducers: {\n    incrementCounter(state, action) {\n      let product = state.find((product) => {\n        return product.id === action.payload;\n      });\n      product.count++;\n    },\n    decrementCounter(state, action) {\n      let product = state.find((product) => {\n        return product.id === action.payload;\n      });\n      if (product.count > 0) {\n        return product.count--;\n      }\n    },\n\n    addToCart(state, action) {\n      let product = state.find((product) => {\n        return product.id === action.payload;\n      });\n      products = [...state, product];\n    },\n  },\n});\nexport let { incrementCounter, decrementCounter } = products.actions;\nexport default configureStore({\n  reducer: {\n    products: products.reducer,\n  },\n});\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,IAAIC,QAAQ,GAAGD,WAAW,CAAC;EACzBE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE,iBAAiB;IAAEG,KAAK,EAAE;EAAE,CAAC,EAC5C;IAAED,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE,aAAa;IAAEG,KAAK,EAAE;EAAE,CAAC,CACzC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC9B,IAAIC,OAAO,GAAGF,KAAK,CAACG,IAAI,CAAED,OAAO,IAAK;QACpC,OAAOA,OAAO,CAACN,EAAE,KAAKK,MAAM,CAACG,OAAO;MACtC,CAAC,CAAC;MACFF,OAAO,CAACL,KAAK,EAAE;IACjB,CAAC;IACDQ,gBAAgBA,CAACL,KAAK,EAAEC,MAAM,EAAE;MAC9B,IAAIC,OAAO,GAAGF,KAAK,CAACG,IAAI,CAAED,OAAO,IAAK;QACpC,OAAOA,OAAO,CAACN,EAAE,KAAKK,MAAM,CAACG,OAAO;MACtC,CAAC,CAAC;MACF,IAAIF,OAAO,CAACL,KAAK,GAAG,CAAC,EAAE;QACrB,OAAOK,OAAO,CAACL,KAAK,EAAE;MACxB;IACF,CAAC;IAEDS,SAASA,CAACN,KAAK,EAAEC,MAAM,EAAE;MACvB,IAAIC,OAAO,GAAGF,KAAK,CAACG,IAAI,CAAED,OAAO,IAAK;QACpC,OAAOA,OAAO,CAACN,EAAE,KAAKK,MAAM,CAACG,OAAO;MACtC,CAAC,CAAC;MACFX,QAAQ,GAAG,CAAC,GAAGO,KAAK,EAAEE,OAAO,CAAC;IAChC;EACF;AACF,CAAC,CAAC;AACF,OAAO,IAAI;EAAEH,gBAAgB;EAAEM;AAAiB,CAAC,GAAGZ,QAAQ,CAACc,OAAO;AACpE,eAAehB,cAAc,CAAC;EAC5BiB,OAAO,EAAE;IACPf,QAAQ,EAAEA,QAAQ,CAACe;EACrB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
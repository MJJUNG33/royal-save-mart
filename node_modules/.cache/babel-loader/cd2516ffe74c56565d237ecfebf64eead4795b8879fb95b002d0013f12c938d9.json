{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst cartItems = createSlice({\n  name: \"cartItems\",\n  initialState: [],\n  reducers: {\n    incrementCounter(state, action) {\n      // const productIndex = state.findIndex((product) => {\n      //   return product.id === action.payload;\n      // });\n      // state[productIndex].count++;\n      // localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      const productIndex = state.findIndex(product => product.id === action.payload);\n      const updatedState = [...state];\n      updatedState[productIndex] = {\n        ...updatedState[productIndex],\n        count: updatedState[productIndex].count + 1\n      };\n      state = updatedState;\n      localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n    },\n    decrementCounter(state, action) {\n      const productIndex = state.findIndex(product => product.id === action.payload);\n      if (productIndex !== -1) {\n        const updatedCount = state[productIndex].count - 1;\n        if (updatedCount === 0) {\n          state.splice(productIndex, 1);\n        } else {\n          state[productIndex] = {\n            ...state[productIndex],\n            count: updatedCount\n          };\n        }\n        localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      }\n    },\n    addToCart(state, action) {\n      // const existingProductIndex = state.findIndex(\n      //   (product) => product.id === action.payload.id\n      // );\n\n      // if (existingProductIndex !== -1) {\n      //   state[existingProductIndex] = {\n      //     ...state[existingProductIndex],\n      //     count: state[existingProductIndex].count + 1,\n      //   };\n      // } else {\n      //   state.push({ ...action.payload, count: 1 });\n      // }\n      // localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      const productToAdd = action.payload;\n      const existingProduct = state.find(product => product.id === productToAdd.id);\n      if (existingProduct) {\n        existingProduct.count += 1;\n      } else {\n        state.push({\n          ...productToAdd,\n          count: 1\n        });\n      }\n      localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n    },\n    removeFromCart(state, action) {\n      const productId = action.payload;\n      const updatedCart = state.filter(product => product.id !== productId);\n      localStorage.setItem(\"addedToCart\", JSON.stringify(updatedCart));\n      return updatedCart;\n    },\n    initializeCart(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  incrementCounter,\n  decrementCounter,\n  addToCart,\n  removeFromCart,\n  initializeCart\n} = cartItems.actions;\nexport default configureStore({\n  reducer: {\n    cartItems: cartItems.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","cartItems","name","initialState","reducers","incrementCounter","state","action","productIndex","findIndex","product","id","payload","updatedState","count","localStorage","setItem","JSON","stringify","decrementCounter","updatedCount","splice","addToCart","productToAdd","existingProduct","find","push","removeFromCart","productId","updatedCart","filter","initializeCart","actions","reducer"],"sources":["/Users/minjijung/Desktop/royasavemart/royal-save-mart/src/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst cartItems = createSlice({\n  name: \"cartItems\",\n  initialState: [],\n  reducers: {\n    incrementCounter(state, action) {\n      // const productIndex = state.findIndex((product) => {\n      //   return product.id === action.payload;\n      // });\n      // state[productIndex].count++;\n      // localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      const productIndex = state.findIndex(\n        (product) => product.id === action.payload\n      );\n      const updatedState = [...state];\n      updatedState[productIndex] = {\n        ...updatedState[productIndex],\n        count: updatedState[productIndex].count + 1,\n      };\n      state = updatedState;\n      localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n    },\n\n    decrementCounter(state, action) {\n      const productIndex = state.findIndex(\n        (product) => product.id === action.payload\n      );\n\n      if (productIndex !== -1) {\n        const updatedCount = state[productIndex].count - 1;\n\n        if (updatedCount === 0) {\n          state.splice(productIndex, 1);\n        } else {\n          state[productIndex] = {\n            ...state[productIndex],\n            count: updatedCount,\n          };\n        }\n        localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      }\n    },\n\n    addToCart(state, action) {\n      // const existingProductIndex = state.findIndex(\n      //   (product) => product.id === action.payload.id\n      // );\n\n      // if (existingProductIndex !== -1) {\n      //   state[existingProductIndex] = {\n      //     ...state[existingProductIndex],\n      //     count: state[existingProductIndex].count + 1,\n      //   };\n      // } else {\n      //   state.push({ ...action.payload, count: 1 });\n      // }\n      // localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      const productToAdd = action.payload;\n      const existingProduct = state.find(\n        (product) => product.id === productToAdd.id\n      );\n\n      if (existingProduct) {\n        existingProduct.count += 1;\n      } else {\n        state.push({ ...productToAdd, count: 1 });\n      }\n\n      localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n    },\n\n    removeFromCart(state, action) {\n      const productId = action.payload;\n      const updatedCart = state.filter((product) => product.id !== productId);\n      localStorage.setItem(\"addedToCart\", JSON.stringify(updatedCart));\n      return updatedCart;\n    },\n\n    initializeCart(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const {\n  incrementCounter,\n  decrementCounter,\n  addToCart,\n  removeFromCart,\n  initializeCart,\n} = cartItems.actions;\n\nexport default configureStore({\n  reducer: {\n    cartItems: cartItems.reducer,\n  },\n});\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,gBAAgBA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC9B;MACA;MACA;MACA;MACA;MACA,MAAMC,YAAY,GAAGF,KAAK,CAACG,SAAS,CACjCC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACK,OACrC,CAAC;MACD,MAAMC,YAAY,GAAG,CAAC,GAAGP,KAAK,CAAC;MAC/BO,YAAY,CAACL,YAAY,CAAC,GAAG;QAC3B,GAAGK,YAAY,CAACL,YAAY,CAAC;QAC7BM,KAAK,EAAED,YAAY,CAACL,YAAY,CAAC,CAACM,KAAK,GAAG;MAC5C,CAAC;MACDR,KAAK,GAAGO,YAAY;MACpBE,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACZ,KAAK,CAAC,CAAC;IAC5D,CAAC;IAEDa,gBAAgBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMC,YAAY,GAAGF,KAAK,CAACG,SAAS,CACjCC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKJ,MAAM,CAACK,OACrC,CAAC;MAED,IAAIJ,YAAY,KAAK,CAAC,CAAC,EAAE;QACvB,MAAMY,YAAY,GAAGd,KAAK,CAACE,YAAY,CAAC,CAACM,KAAK,GAAG,CAAC;QAElD,IAAIM,YAAY,KAAK,CAAC,EAAE;UACtBd,KAAK,CAACe,MAAM,CAACb,YAAY,EAAE,CAAC,CAAC;QAC/B,CAAC,MAAM;UACLF,KAAK,CAACE,YAAY,CAAC,GAAG;YACpB,GAAGF,KAAK,CAACE,YAAY,CAAC;YACtBM,KAAK,EAAEM;UACT,CAAC;QACH;QACAL,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACZ,KAAK,CAAC,CAAC;MAC5D;IACF,CAAC;IAEDgB,SAASA,CAAChB,KAAK,EAAEC,MAAM,EAAE;MACvB;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAMgB,YAAY,GAAGhB,MAAM,CAACK,OAAO;MACnC,MAAMY,eAAe,GAAGlB,KAAK,CAACmB,IAAI,CAC/Bf,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKY,YAAY,CAACZ,EAC3C,CAAC;MAED,IAAIa,eAAe,EAAE;QACnBA,eAAe,CAACV,KAAK,IAAI,CAAC;MAC5B,CAAC,MAAM;QACLR,KAAK,CAACoB,IAAI,CAAC;UAAE,GAAGH,YAAY;UAAET,KAAK,EAAE;QAAE,CAAC,CAAC;MAC3C;MAEAC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACZ,KAAK,CAAC,CAAC;IAC5D,CAAC;IAEDqB,cAAcA,CAACrB,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMqB,SAAS,GAAGrB,MAAM,CAACK,OAAO;MAChC,MAAMiB,WAAW,GAAGvB,KAAK,CAACwB,MAAM,CAAEpB,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKiB,SAAS,CAAC;MACvEb,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACW,WAAW,CAAC,CAAC;MAChE,OAAOA,WAAW;IACpB,CAAC;IAEDE,cAAcA,CAACzB,KAAK,EAAEC,MAAM,EAAE;MAC5B,OAAOA,MAAM,CAACK,OAAO;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXP,gBAAgB;EAChBc,gBAAgB;EAChBG,SAAS;EACTK,cAAc;EACdI;AACF,CAAC,GAAG9B,SAAS,CAAC+B,OAAO;AAErB,eAAejC,cAAc,CAAC;EAC5BkC,OAAO,EAAE;IACPhC,SAAS,EAAEA,SAAS,CAACgC;EACvB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
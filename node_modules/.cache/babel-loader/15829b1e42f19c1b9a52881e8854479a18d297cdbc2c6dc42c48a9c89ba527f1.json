{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst cartItems = createSlice({\n  name: \"cartItems\",\n  initialState: [],\n  reducers: {\n    incrementCounter(state, action) {\n      const productIndex = state.findIndex(product => product.id === action.payload);\n      if (productIndex !== -1) {\n        return state.map((product, index) => index === productIndex ? {\n          ...product,\n          count: product.count + 1\n        } : product);\n      }\n      return state;\n    },\n    decrementCounter(state, action) {\n      const productIndex = state.findIndex(product => product.id === action.payload);\n      if (productIndex !== -1) {\n        const updatedCount = state[productIndex].count - 1;\n        if (updatedCount === 0) {\n          return state.filter((product, index) => index !== productIndex);\n        } else {\n          return state.map((product, index) => index === productIndex ? {\n            ...product,\n            count: updatedCount\n          } : product);\n        }\n      }\n      return state;\n    },\n    addToCart(state, action) {\n      const existingProduct = state.find(product => product.id === action.payload);\n      if (existingProduct) {\n        return state.map(product => product.id === action.payload ? {\n          ...product,\n          count: product.count + 1\n        } : product);\n      } else {\n        state.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n    },\n    updateCartItems(state, action) {\n      state = action.payload;\n      localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      return state;\n    },\n    removeFromCart(state, action) {\n      const productId = action.payload;\n      const updatedCart = state.filter(product => product.id !== productId);\n      localStorage.setItem(\"addedToCart\", JSON.stringify(updatedCart));\n      return updatedCart;\n    }\n  }\n});\nexport const {\n  incrementCounter,\n  decrementCounter,\n  addToCart,\n  updateCartItems,\n  removeFromCart\n} = cartItems.actions;\nexport const asyncAddToCart = product => (dispatch, getState) => {\n  dispatch(addToCart(product));\n  const updatedState = getState().cartItems;\n  localStorage.setItem(\"addedToCart\", JSON.stringify(updatedState));\n};\nexport default configureStore({\n  reducer: {\n    cartItems: cartItems.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","cartItems","name","initialState","reducers","incrementCounter","state","action","productIndex","findIndex","product","id","payload","map","index","count","decrementCounter","updatedCount","filter","addToCart","existingProduct","find","push","updateCartItems","localStorage","setItem","JSON","stringify","removeFromCart","productId","updatedCart","actions","asyncAddToCart","dispatch","getState","updatedState","reducer"],"sources":["/Users/minjijung/Desktop/royasavemart/royal-save-mart/src/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst cartItems = createSlice({\n  name: \"cartItems\",\n  initialState: [],\n  reducers: {\n    incrementCounter(state, action) {\n      const productIndex = state.findIndex(\n        (product) => product.id === action.payload\n      );\n      if (productIndex !== -1) {\n        return state.map((product, index) =>\n          index === productIndex\n            ? { ...product, count: product.count + 1 }\n            : product\n        );\n      }\n      return state;\n    },\n\n    decrementCounter(state, action) {\n      const productIndex = state.findIndex(\n        (product) => product.id === action.payload\n      );\n      if (productIndex !== -1) {\n        const updatedCount = state[productIndex].count - 1;\n\n        if (updatedCount === 0) {\n          return state.filter((product, index) => index !== productIndex);\n        } else {\n          return state.map((product, index) =>\n            index === productIndex\n              ? { ...product, count: updatedCount }\n              : product\n          );\n        }\n      }\n      return state;\n    },\n\n    addToCart(state, action) {\n      const existingProduct = state.find(\n        (product) => product.id === action.payload\n      );\n\n      if (existingProduct) {\n        return state.map((product) =>\n          product.id === action.payload\n            ? { ...product, count: product.count + 1 }\n            : product\n        );\n      } else {\n        state.push({ ...action.payload, count: 1 });\n      }\n    },\n\n    updateCartItems(state, action) {\n      state = action.payload;\n      localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      return state;\n    },\n\n    removeFromCart(state, action) {\n      const productId = action.payload;\n      const updatedCart = state.filter((product) => product.id !== productId);\n      localStorage.setItem(\"addedToCart\", JSON.stringify(updatedCart));\n      return updatedCart;\n    },\n  },\n});\n\nexport const {\n  incrementCounter,\n  decrementCounter,\n  addToCart,\n  updateCartItems,\n  removeFromCart,\n} = cartItems.actions;\n\nexport const asyncAddToCart = (product) => (dispatch, getState) => {\n  dispatch(addToCart(product));\n\n  const updatedState = getState().cartItems;\n  localStorage.setItem(\"addedToCart\", JSON.stringify(updatedState));\n};\n\nexport default configureStore({\n  reducer: {\n    cartItems: cartItems.reducer,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
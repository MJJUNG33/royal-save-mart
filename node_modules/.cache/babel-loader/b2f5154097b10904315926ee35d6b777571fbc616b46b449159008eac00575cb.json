{"ast":null,"code":"var _jsxFileName = \"/Users/minjijung/Desktop/royasavemart/royal-save-mart/src/components/routes/SpecialPage.js\",\n  _s = $RefreshSig$();\nimport { Col, Row, Card, Badge } from \"react-bootstrap\";\nimport AddToCartButton from \"../AddToCartButton\";\nimport Filter from \"../Filter\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Special({\n  products\n}) {\n  _s();\n  const specialProduct = products.filter(product => product.special === true);\n  const [filteredProducts, setFilteredProducts] = useState(specialProduct);\n  const [selectedBrand, setSelectedBrand] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  useEffect(() => {\n    const newFilteredProducts = filterProducts();\n\n    // Check if the filtered products have changed before updating the state\n    if (!arraysEqual(newFilteredProducts, filteredProducts)) {\n      setFilteredProducts(newFilteredProducts);\n    }\n  }, [specialProduct, selectedBrand, selectedCategory, filteredProducts]);\n  const filterProducts = () => {\n    let newFilteredProducts = specialProduct;\n    if (selectedBrand) {\n      newFilteredProducts = newFilteredProducts.filter(product => product.brand === selectedBrand);\n    }\n    if (selectedCategory !== \"all\") {\n      newFilteredProducts = newFilteredProducts.filter(product => product.category === selectedCategory);\n    }\n    return newFilteredProducts;\n  };\n  const arraysEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n  const handleBrandChange = brand => {\n    setSelectedBrand(brand);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \" Special\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      categories: [\"all\", \"newArrival\", \"special\", \"noodle\", \"snack\", \"sauce\"],\n      brands: [\"crown\", \"lotte\", \"nongshim\", \"orion\", \"paldo\", \"samyang\", \"seoul food\"],\n      onCategoryChange: handleCategoryChange,\n      onBrandChange: handleBrandChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      lg: 4,\n      className: \"g-4 mx-1 my-2 m-xl-4\",\n      children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"d-flex flex-column p-1 product-card \",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"d-flex flex-column flex-1 justify-content-between\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Special, \"SwAFnZtlcjdNc5UqiONgVESQrSo=\");\n_c = Special;\nexport default Special;\nvar _c;\n$RefreshReg$(_c, \"Special\");","map":{"version":3,"names":["Col","Row","Card","Badge","AddToCartButton","Filter","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Special","products","_s","specialProduct","filter","product","special","filteredProducts","setFilteredProducts","selectedBrand","setSelectedBrand","selectedCategory","setSelectedCategory","newFilteredProducts","filterProducts","arraysEqual","brand","category","a","b","JSON","stringify","handleCategoryChange","handleBrandChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","categories","brands","onCategoryChange","onBrandChange","xs","md","lg","map","Body","id","_c","$RefreshReg$"],"sources":["/Users/minjijung/Desktop/royasavemart/royal-save-mart/src/components/routes/SpecialPage.js"],"sourcesContent":["import { Col, Row, Card, Badge } from \"react-bootstrap\";\nimport AddToCartButton from \"../AddToCartButton\";\nimport Filter from \"../Filter\";\nimport { useState, useEffect } from \"react\";\n\nfunction Special({ products }) {\n  const specialProduct = products.filter((product) => product.special === true);\n\n  const [filteredProducts, setFilteredProducts] = useState(specialProduct);\n  const [selectedBrand, setSelectedBrand] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n\n  useEffect(() => {\n    const newFilteredProducts = filterProducts();\n\n    // Check if the filtered products have changed before updating the state\n    if (!arraysEqual(newFilteredProducts, filteredProducts)) {\n      setFilteredProducts(newFilteredProducts);\n    }\n  }, [specialProduct, selectedBrand, selectedCategory, filteredProducts]);\n\n  const filterProducts = () => {\n    let newFilteredProducts = specialProduct;\n\n    if (selectedBrand) {\n      newFilteredProducts = newFilteredProducts.filter(\n        (product) => product.brand === selectedBrand\n      );\n    }\n\n    if (selectedCategory !== \"all\") {\n      newFilteredProducts = newFilteredProducts.filter(\n        (product) => product.category === selectedCategory\n      );\n    }\n\n    return newFilteredProducts;\n  };\n\n  const arraysEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\n  const handleCategoryChange = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const handleBrandChange = (brand) => {\n    setSelectedBrand(brand);\n  };\n\n  return (\n    <>\n      <h1 className=\"page-title\"> Special</h1>\n      <Filter\n        categories={[\n          \"all\",\n          \"newArrival\",\n          \"special\",\n          \"noodle\",\n          \"snack\",\n          \"sauce\",\n        ]}\n        brands={[\n          \"crown\",\n          \"lotte\",\n          \"nongshim\",\n          \"orion\",\n          \"paldo\",\n          \"samyang\",\n          \"seoul food\",\n        ]}\n        onCategoryChange={handleCategoryChange}\n        onBrandChange={handleBrandChange}\n      />\n\n      <Row xs={1} md={2} lg={4} className=\"g-4 mx-1 my-2 m-xl-4\">\n        {filteredProducts.map((product) => (\n          <Col key={product.id} xs={12} md={6} lg={3}>\n            <Card className=\"d-flex flex-column p-1 product-card \">\n              <Card.Body className=\"d-flex flex-column flex-1 justify-content-between\">\n                {/* ... rest of the component code */}\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default Special;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/minjijung/Desktop/royasavemart/royal-save-mart/src/components/BreadCrumb.js\",\n  _s = $RefreshSig$();\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BreadCrumb() {\n  _s();\n  const location = useLocation();\n  const pathnames = location.pathname.split(\"/\").filter(x => x);\n  return /*#__PURE__*/_jsxDEV(Breadcrumb, {\n    className: \"bread-crumb\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n      linkAs: Link,\n      linkProps: {\n        to: \"/\"\n      },\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n      linkAs: Link,\n      linkProps: {\n        to: \"/products\"\n      },\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), pathnames.map((name, index) => {\n      const routeTo = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n      const isLast = index === pathnames.length - 1;\n      return /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n        linkAs: Link,\n        linkProps: {\n          to: routeTo\n        },\n        active: isLast,\n        children: isLast ? formatBreadcrumbName(name) : name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(BreadCrumb, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = BreadCrumb;\nfunction formatBreadcrumbName(name) {\n  // Add any formatting logic for breadcrumb names here\n  return name.replace(/-/g, \" \"); // Example: Replace hyphens with spaces\n}\n\nexport default BreadCrumb;\nvar _c;\n$RefreshReg$(_c, \"BreadCrumb\");","map":{"version":3,"names":["Breadcrumb","useLocation","Link","jsxDEV","_jsxDEV","BreadCrumb","_s","location","pathnames","pathname","split","filter","x","className","children","Item","linkAs","linkProps","to","fileName","_jsxFileName","lineNumber","columnNumber","map","name","index","routeTo","slice","join","isLast","length","active","formatBreadcrumbName","_c","replace","$RefreshReg$"],"sources":["/Users/minjijung/Desktop/royasavemart/royal-save-mart/src/components/BreadCrumb.js"],"sourcesContent":["import { Breadcrumb } from \"react-bootstrap\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nfunction BreadCrumb() {\n  const location = useLocation();\n  const pathnames = location.pathname.split(\"/\").filter((x) => x);\n\n  return (\n    <Breadcrumb className=\"bread-crumb\">\n      <Breadcrumb.Item linkAs={Link} linkProps={{ to: \"/\" }}>\n        Home\n      </Breadcrumb.Item>\n      <Breadcrumb.Item linkAs={Link} linkProps={{ to: \"/products\" }}>\n        Products\n      </Breadcrumb.Item>\n\n      {pathnames.map((name, index) => {\n        const routeTo = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n        const isLast = index === pathnames.length - 1;\n\n        return (\n          <Breadcrumb.Item\n            key={index}\n            linkAs={Link}\n            linkProps={{ to: routeTo }}\n            active={isLast}\n          >\n            {isLast ? formatBreadcrumbName(name) : name}\n          </Breadcrumb.Item>\n        );\n      })}\n    </Breadcrumb>\n  );\n}\n\nfunction formatBreadcrumbName(name) {\n  // Add any formatting logic for breadcrumb names here\n  return name.replace(/-/g, \" \"); // Example: Replace hyphens with spaces\n}\n\nexport default BreadCrumb;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,SAAS,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC;EAE/D,oBACER,OAAA,CAACJ,UAAU;IAACa,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACjCV,OAAA,CAACJ,UAAU,CAACe,IAAI;MAACC,MAAM,EAAEd,IAAK;MAACe,SAAS,EAAE;QAAEC,EAAE,EAAE;MAAI,CAAE;MAAAJ,QAAA,EAAC;IAEvD;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,eAClBlB,OAAA,CAACJ,UAAU,CAACe,IAAI;MAACC,MAAM,EAAEd,IAAK;MAACe,SAAS,EAAE;QAAEC,EAAE,EAAE;MAAY,CAAE;MAAAJ,QAAA,EAAC;IAE/D;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,EAEjBd,SAAS,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC9B,MAAMC,OAAO,GAAI,IAAGlB,SAAS,CAACmB,KAAK,CAAC,CAAC,EAAEF,KAAK,GAAG,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAE,EAAC;MAC7D,MAAMC,MAAM,GAAGJ,KAAK,KAAKjB,SAAS,CAACsB,MAAM,GAAG,CAAC;MAE7C,oBACE1B,OAAA,CAACJ,UAAU,CAACe,IAAI;QAEdC,MAAM,EAAEd,IAAK;QACbe,SAAS,EAAE;UAAEC,EAAE,EAAEQ;QAAQ,CAAE;QAC3BK,MAAM,EAAEF,MAAO;QAAAf,QAAA,EAEde,MAAM,GAAGG,oBAAoB,CAACR,IAAI,CAAC,GAAGA;MAAI,GALtCC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMK,CAAC;IAEtB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjB;AAAChB,EAAA,CA9BQD,UAAU;EAAA,QACAJ,WAAW;AAAA;AAAAgC,EAAA,GADrB5B,UAAU;AAgCnB,SAAS2B,oBAAoBA,CAACR,IAAI,EAAE;EAClC;EACA,OAAOA,IAAI,CAACU,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;AAClC;;AAEA,eAAe7B,UAAU;AAAC,IAAA4B,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst cartItems = createSlice({\n  name: \"cartItems\",\n  initialState: [],\n  reducers: {\n    incrementCounter(state, action) {\n      const productIndex = state.findIndex(product => {\n        return product.id === action.payload;\n      });\n      state[productIndex].count++;\n    },\n    decrementCounter(state, action) {\n      const productIndex = state.findIndex(product => product.id === action.payload);\n      if (productIndex !== -1) {\n        const updatedCount = state[productIndex].count - 1;\n        if (updatedCount === 0) {\n          state.splice(productIndex, 1);\n        } else {\n          state[productIndex] = {\n            ...state[productIndex],\n            count: updatedCount\n          };\n        }\n        localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      }\n    },\n    addToCart(state, action) {\n      const existingProductIndex = state.findIndex(product => product.id === action.payload.id);\n      if (existingProductIndex !== -1) {\n        state[existingProductIndex] = {\n          ...state[existingProductIndex],\n          count: state[existingProductIndex].count + 1\n        };\n      } else {\n        state.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      // const productToAdd = action.payload;\n      // const existingProduct = state.find(\n      //   (product) => product.id === productToAdd.id\n      // );\n\n      // if (existingProduct) {\n      //   existingProduct.count += 1;\n      // } else {\n      //   state.push({ ...productToAdd, count: 1 });\n      // }\n\n      // localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n    },\n\n    removeFromCart(state, action) {\n      const productId = action.payload;\n      const updatedCart = state.filter(product => product.id !== productId);\n      localStorage.setItem(\"addedToCart\", JSON.stringify(updatedCart));\n      return updatedCart;\n    },\n    initializeCart(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  incrementCounter,\n  decrementCounter,\n  addToCart,\n  removeFromCart,\n  initializeCart\n} = cartItems.actions;\nexport default configureStore({\n  reducer: {\n    cartItems: cartItems.reducer\n  }\n});","map":{"version":3,"names":["configureStore","createSlice","cartItems","name","initialState","reducers","incrementCounter","state","action","productIndex","findIndex","product","id","payload","count","decrementCounter","updatedCount","splice","localStorage","setItem","JSON","stringify","addToCart","existingProductIndex","push","removeFromCart","productId","updatedCart","filter","initializeCart","actions","reducer"],"sources":["/Users/minjijung/Desktop/royasavemart/royal-save-mart/src/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst cartItems = createSlice({\n  name: \"cartItems\",\n  initialState: [],\n  reducers: {\n    incrementCounter(state, action) {\n      const productIndex = state.findIndex((product) => {\n        return product.id === action.payload;\n      });\n      state[productIndex].count++;\n    },\n\n    decrementCounter(state, action) {\n      const productIndex = state.findIndex(\n        (product) => product.id === action.payload\n      );\n\n      if (productIndex !== -1) {\n        const updatedCount = state[productIndex].count - 1;\n\n        if (updatedCount === 0) {\n          state.splice(productIndex, 1);\n        } else {\n          state[productIndex] = {\n            ...state[productIndex],\n            count: updatedCount,\n          };\n        }\n        localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      }\n    },\n\n    addToCart(state, action) {\n      const existingProductIndex = state.findIndex(\n        (product) => product.id === action.payload.id\n      );\n\n      if (existingProductIndex !== -1) {\n        state[existingProductIndex] = {\n          ...state[existingProductIndex],\n          count: state[existingProductIndex].count + 1,\n        };\n      } else {\n        state.push({ ...action.payload, count: 1 });\n      }\n      localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n      // const productToAdd = action.payload;\n      // const existingProduct = state.find(\n      //   (product) => product.id === productToAdd.id\n      // );\n\n      // if (existingProduct) {\n      //   existingProduct.count += 1;\n      // } else {\n      //   state.push({ ...productToAdd, count: 1 });\n      // }\n\n      // localStorage.setItem(\"addedToCart\", JSON.stringify(state));\n    },\n\n    removeFromCart(state, action) {\n      const productId = action.payload;\n      const updatedCart = state.filter((product) => product.id !== productId);\n      localStorage.setItem(\"addedToCart\", JSON.stringify(updatedCart));\n      return updatedCart;\n    },\n\n    initializeCart(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const {\n  incrementCounter,\n  decrementCounter,\n  addToCart,\n  removeFromCart,\n  initializeCart,\n} = cartItems.actions;\n\nexport default configureStore({\n  reducer: {\n    cartItems: cartItems.reducer,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}